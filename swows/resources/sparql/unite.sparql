PREFIX df:   <http://www.swows.org/dataflow#>
PREFIX swi:  <http://www.swows.org/instance#>
PREFIX sp:   <http://spinrdf.org/sp#>
PREFIX bn:     <http://www.swows.org/instance/bnode#>

CONSTRUCT {
    ?s ?p ?o .
    ?constructGraph ?pR ?oR .
    ?sG ?pG ?oG .
    ?constructGraph sp:where ?newWhereElement .
    ?newWhereElement
      a sp:Element, sp:NamedGraph ;
      sp:graphNameNode ?mainGraph ;
      sp:element ?mainElement .
    }
  WHERE {
    ?s ?p ?o .
    ?constructGraph
      a df:ConstructGraph ;
      df:config ?importedGraph ;
      df:input ?inputDataset .
    ?inputDataset a df:InlineDataset .
    {
      ?inputDataset df:input ?mainGraph .
      BIND ( sp:default AS ?mainGraphName ) .
    } UNION {
      ?inputDataset df:namedInput ?mainGraphInput .
      ?mainGraphInput df:input ?mainGraph .
      {
        ?mainGraphInput df:id ?mainGraphName .
      } UNION {
        BIND ( ?mainGraph AS ?mainGraphName ) .
        FILTER ( NOT EXISTS { ?mainGraphInput df:id ?namedInputAnyName } ) .
      }
    }
    OPTIONAL {
      ?inputDataset df:namedInput ?innerGraphInput .
      ?innerGraphInput df:input ?innerGraph .
      {
        ?innerGraphInput df:id ?innerGraphName .
      } UNION {
        BIND ( ?innerGraph AS ?innerGraphName ) .
        FILTER ( NOT EXISTS { ?innerGraphInput df:id ?namedInputAnyName } ) .
      }
    }
    ?importedGraph
      a df:ImportedGraph ;
      df:uri ?graphName .
    GRAPH ?graphName {
    
      ?sG ?pG ?oG .
      FILTER (?sG != swi:GraphRoot && !(EXISTS{?sG a sp:NamedGraph} && ?pG = sp:graphNameNode)) .
      
      swi:GraphRoot ?pR ?oR .
      FILTER (?pR != sp:where) .
      
      {
        swi:GraphRoot sp:where ?whereElement .
        FILTER (NOT EXISTS{?whereElement a sp:NamedGraph}) .
        BIND( URI( CONCAT( STR(bn:where_), MD5( STR(?whereElement) ) ) ) AS ?newWhereElement ) .
        BIND( sp:default AS ?mainGraphName ) .
        BIND( ?whereElement AS ?mainElement ) .
      } UNION {
        swi:GraphRoot sp:where ?newWhereElement .
        ?newWhereElement
          a sp:NamedGraph ;
          sp:graphNameNode ?mainGraphName ;
          sp:element ?mainElement .
      }
      OPTIONAL {
        swi:GraphRoot sp:where ?newWhereElement .
        ?newWhereElement
          a sp:NamedGraph ;
          sp:graphNameNode ?mainGraphName ;
          sp:element ?mainElement .
      }
    }
  }