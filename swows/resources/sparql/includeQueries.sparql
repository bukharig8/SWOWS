PREFIX df:      <http://www.swows.org/dataflow#>
PREFIX swi:     <http://www.swows.org/instance#>
PREFIX sp:      <http://spinrdf.org/sp#>
PREFIX spx:   <http://www.swows.org/spinx#>
PREFIX bn:      <http://www.swows.org/instance/.well-known/genid/>

CONSTRUCT {
    ?s ?p ?o .
    ?constructGraph ?pR ?oR .
    ?sG ?pG ?oG .
    ?constructGraph sp:where ?newWhereElement .
    ?newWhereElement
      a sp:Element, sp:NamedGraph ;
      sp:graphNameNode ?mainGraph ;
#      spx:element ?mainElement .
      spx:element ?whereElement .
    ?innerNamedGraph sp:graphNameNode ?innerGraph .
  }
  WHERE {
    ?s ?p ?o .
    FILTER (
      ( NOT EXISTS { ?s a df:ConstructGraph }
        || (?p NOT IN (df:config, df:input)) )
      && NOT EXISTS { 
          ?sP
            a df:ConstructGraph ;
            df:input/df:namedInput? ?s }
    ) .
    OPTIONAL {
      ?constructGraph
        a df:ConstructGraph ;
        df:config ?importedGraph ;
        df:input ?inputDataset .
      ?inputDataset a df:InlineDataset .
#      {
        ?inputDataset df:input ?mainGraph .
#        BIND ( sp:default AS ?mainGraphName ) .
#      } UNION {
#        ?inputDataset df:namedInput ?mainGraphInput .
#        ?mainGraphInput df:input ?mainGraph .
#        ?mainGraphInput df:id ?mainGraphName .
#      }
      OPTIONAL {
        ?inputDataset df:namedInput ?innerGraphInput .
        ?innerGraphInput df:input ?innerGraph .
        ?innerGraphInput df:id ?innerGraphName .
      }
    
      ?importedGraph
        a df:ImportedGraph ;
        df:uri ?graphName .
      GRAPH ?graphName {
    
        ?sG ?pG ?oG .
        FILTER (
            ?sG != swi:GraphRoot
            && !(EXISTS{?sG a sp:NamedGraph} && ?pG = sp:graphNameNode) ) .
      
        swi:GraphRoot ?pR ?oR .
#        FILTER (?pR != sp:where || EXISTS {?oR a sp:NamedGraph} ) .
        FILTER (?pR != sp:where ) .
      
#        {
          swi:GraphRoot sp:where ?whereElement .
#          FILTER (NOT EXISTS {?whereElement a sp:NamedGraph}) .
          BIND( URI( CONCAT( STR(bn:where_), MD5( STR(?whereElement) ) ) ) AS ?newWhereElement ) .
#          BIND( sp:default AS ?mainGraphName ) .
#          BIND( ?whereElement AS ?mainElement ) .
#        } UNION {
#          swi:GraphRoot sp:where ?newWhereElement .
#          ?newWhereElement
#            a sp:NamedGraph ;
#            sp:graphNameNode ?mainGraphName ;
#            spx:element ?mainElement .
#        }
        OPTIONAL {
          ?innerNamedGraph
            a sp:NamedGraph ;
            sp:graphNameNode ?innerGraphName ;
            spx:element ?innerElement .
        }
      }
    }
  }
  